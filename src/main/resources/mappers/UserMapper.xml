<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC
        "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="dev.hcs.mytournament.mappers.UserMapper">
    <insert id="insertUser" parameterType="dev.hcs.mytournament.entities.UserEntity">
        INSERT INTO `worldcup`.`users` (`email`, `password`, `nickname`, `created_at`, `is_admin`, `is_deleted`, `is_suspended`, `is_kakao`)
        VALUES (#{email}, #{password}, #{nickname}, #{createdAt}, #{isAdmin}, #{isDeleted}, #{isSuspended}, #{isKakao})
    </insert>

    <insert id="insertEmailAuth" parameterType="dev.hcs.mytournament.entities.EmailAuthEntity">
        INSERT INTO `worldcup`.`email_auths` (`email`, `code`, `salt`, `created_at`, `expires_at`, `is_expired`, `is_verified`, `is_used`)
        VALUES (#{email}, #{code}, #{salt}, #{createdAt}, #{expiresAt}, #{isExpired}, #{isVerified}, #{isUsed})
    </insert>

    <update id="updateUser" parameterType="dev.hcs.mytournament.entities.UserEntity">
        UPDATE `worldcup`.`users`
        SET `password`      = #{password},
            `nickname`      = #{nickname},
            `created_at`    = #{createdAt},
            `is_admin`      = #{isAdmin},
            `is_deleted`    = #{isDeleted},
            `is_suspended`  = #{isSuspended},
            `is_kakao`      = #{isKakao}
        WHERE BINARY `email` = #{email}
        LIMIT 1
    </update>

    <update id="updateEmailAuth" parameterType="dev.hcs.mytournament.entities.EmailAuthEntity">
        UPDATE `worldcup`.`email_auths`
        SET `created_at`    = #{createdAt},
            `expires_at`    = #{expiresAt},
            `is_expired`    = #{isExpired},
            `is_verified`   = #{isVerified},
            `is_used`       = #{isUsed}
        WHERE BINARY `email` = #{email}
          AND BINARY `code` = #{code}
          AND BINARY `salt` = #{salt}
        LIMIT 1
    </update>

    <select id="selectEmailAuthByEmailCodeSalt" resultType="dev.hcs.mytournament.entities.EmailAuthEntity">
        SELECT `email`          AS `email`,
               `code`           AS `code`,
               `salt`           AS `salt`,
               `created_at`     AS `createdAt`,
               `expires_at`     AS `expiresAt`,
               `is_expired`     AS `isExpired`,
               `is_verified`    AS `isVerified`,
               `is_used`        AS `isUsed`
        FROM `worldcup`.`email_auths`
        WHERE BINARY `email` = #{email}
          AND BINARY `code` = #{code}
          AND BINARY `salt` = #{salt}
        LIMIT 1
    </select>

    <select id="selectUserByEmail" resultType="dev.hcs.mytournament.entities.UserEntity">
        SELECT `email`        AS `email`,
               `password`     AS `password`,
               `nickname`     AS `nickname`,
               `created_at`   AS `createdAt`,
               `is_admin`     AS `isAdmin`,
               `is_deleted`   AS `isDeleted`,
               `is_suspended` AS `isSuspended`,
               `is_kakao`     AS `isKakao`
        FROM `worldcup`.`users`
        WHERE BINARY `email` = #{email}
        LIMIT 1
    </select>

    <select id="selectUserByNickname" resultType="dev.hcs.mytournament.entities.UserEntity">
        SELECT `email`        AS `email`,
               `password`     AS `password`,
               `nickname`     AS `nickname`,
               `created_at`   AS `createdAt`,
               `is_admin`     AS `isAdmin`,
               `is_deleted`   AS `isDeleted`,
               `is_suspended` AS `isSuspended`,
               `is_kakao`     AS `isKakao`
        FROM `worldcup`.`users`
        WHERE BINARY `nickname` = #{nickname}
        LIMIT 1
    </select>

</mapper>